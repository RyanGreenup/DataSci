if(lm == TRUE) {
abline(house.lm, col = "royalblue", lwd = 3, lty = 6)
}
}
plot.house.lm(lm = TRUE)
ggplot(house.df, aes(x = sqm, y = price, shape = nbhd, label = brick, col = (bathrooms+ bedrooms))) +
geom_point(size = 2) +
guides(col = guide_legend(title = "Bathrooms + Bedrooms")) +
guides(shape = guide_legend(title = "Neighbourhood")) +
xlab("Size (sqm)") +
ylab("Price $") +
ggtitle("House Prices") +
geom_abline(slope = house.lm$coefficients[2],
intercept = house.lm$coefficients[1],
lwd = 1, col = "indianred") +
theme_classic()
house.mlm <- lm(price ~ offers + sqm + bedrooms + bathrooms)
summary(house.mlm)
#always use assignments when using the predict() function
price <- house.df$price
sqm   <- house.df$sqm
predict(lm(price ~ sqm), data.frame(sqm=210), interval = "prediction")
predict(house.mlm, data.frame(offers = mean(offers), sqm = 210, bedrooms = mean(bedrooms), bathrooms = mean(bathrooms)), interval = "prediction")
paste("$", round(house.lm$coefficients[2]) * 15)
house.melt <- melt(house.df[, -c(1:5)], id = c("price"))
head(house.melt, 3)
ggplot(house.melt, aes(x = price, y = value, col = variable)) +
geom_point() +
xlab("Price ($)") +
ylab("No. of Rooms") +
ggtitle("Rooms and Housing Cost") +
theme_bw()
predict(lm(price ~ sqm), data.frame(sqm=210), interval = "prediction", level = 0.95)
if(require('pacman')){
library('pacman')
}else{
install.packages('pacman')
library('pacman')
}
pacman::p_load(xts, ggplot2, rmarkdown, reshape2, ggmap,
RColorBrewer, parallel, dplyr, plotly)
house.df <- read.csv(file = "house2018.csv", header = TRUE, sep = ",")
head(house.df)
plot.house <- function() {
plot(x = house.df$sqm, y = house.df$price,
type = "p", main = "House Prices",
xlab = "Property size (sqm)", ylab = "Price ($)",
frame.plot = TRUE, axes = TRUE,
col = "Indianred", pch = 16, cex = 2)
}
plot.house()
nbhd      <- house.df$nbhd
offers    <- house.df$offers
sqm       <- house.df$sqm
brick     <- house.df$brick
bedrooms  <- house.df$bedrooms
bathrooms <- house.df$bathrooms
price     <- house.df$price
house.lm <- lm(price ~ sqm)
summary(house.lm)
plot.house.lm <- function(lm = TRUE) {
plot.house()
if(lm == TRUE) {
abline(house.lm, col = "royalblue", lwd = 3, lty = 6)
}
}
plot.house.lm(lm = TRUE)
ggplot(house.df, aes(x = sqm, y = price, shape = nbhd, label = brick, col = (bathrooms+ bedrooms))) +
geom_point(size = 2) +
guides(col = guide_legend(title = "Bathrooms + Bedrooms")) +
guides(shape = guide_legend(title = "Neighbourhood")) +
xlab("Size (sqm)") +
ylab("Price $") +
ggtitle("House Prices") +
geom_abline(slope = house.lm$coefficients[2],
intercept = house.lm$coefficients[1],
lwd = 1, col = "indianred") +
theme_classic()
house.mlm <- lm(price ~ offers + sqm + bedrooms + bathrooms)
summary(house.mlm)
#always use assignments when using the predict() function
price <- house.df$price
sqm   <- house.df$sqm
predict(lm(price ~ sqm), data.frame(sqm=210), interval = "prediction", level = 0.95)
predict(house.mlm, data.frame(offers = mean(offers), sqm = 210, bedrooms = mean(bedrooms), bathrooms = mean(bathrooms)), interval = "prediction", level = 0.95)
paste("$", round(house.lm$coefficients[2]) * 15)
house.melt <- melt(house.df[, -c(1:5)], id = c("price"))
head(house.melt, 3)
ggplot(house.melt, aes(x = price, y = value, col = variable)) +
geom_point() +
xlab("Price ($)") +
ylab("No. of Rooms") +
ggtitle("Rooms and Housing Cost") +
theme_bw()
day.vec <- c()
weights <- c()
source('~/.active-rstudio-document', echo=TRUE)
for (days in 1:(12*7)) {
day.vec     <- c(day.vec, days)
weights.vec <- c(weights.vec, ((85-73)/12/7 * days + 73))
}
weights.vec <- c()
for (days in 1:(12*7)) {
day.vec     <- c(day.vec, days)
weights.vec <- c(weights.vec, ((85-73)/12/7 * days + 73))
}
data.frame("Days ON" = day.vec, "BodyWeight" = weights.vec)
length(day.vec)
length(weights.vec)
day.vec     <- c()
weights.vec <- c()
for (days in 1:(12*7)) {
day.vec     <- c(day.vec, days)
weights.vec <- c(weights.vec, ((85-73)/12/7 * days + 73))
}
length(day.vec)
length(weights.vec)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
library(ggplot)
source('~/.active-rstudio-document', echo=TRUE)
autoplot(weights.model)
source('~/.active-rstudio-document', echo=TRUE)
autoplot(object = weights.model[,c(2,3)])
weights.model
model.plot <- ggplot(data = weights.model, aes(x = "Days ON", y = "BodyWeight"))
model.plot <- ggplot(data = weights.model, aes(x = "Days ON",
y = "BodyWeight")) +
geom_point()
model.plot
plot(x = weights.model$Days.ON, y = weights.model$BodyWeight)
model.plot <- ggplot(data = weights.model, aes(x = "Days ON",
y = "BodyWeight")) +
geom_point()
source('~/.active-rstudio-document', echo=TRUE)
model.plot
ggplot(data = weights.model, aes(x = "Days ON", y = "BodyWeight")) +
geom_point()
head(weights.model)
ggplot(data = weights.model) +
geom_point(aes(x = "Days ON", y = "BodyWeight"))
head(weights.model)
head(economics)
class(economics)
ggplot(data = economics, aes(x = "date", y = "uempmed")) +
geom_point()
ggplot(data = economics, aes(x = "date", y = "uempmed")) +
geom_polygon()
ggplot(data = economics, aes(x = "pce", y = "uempmed")) +
geom_polygon()
source('E:/One Drive/OneDrive - Western Sydney University/Education/University of Western Sydney/Units/2018/Autumn/Predictive Modelling (301034)/Weekly Material/Week 1/Practical/1. Housing Problem/R Script/HousingProblem Script.R', echo=TRUE)
ggplot(house.df, aes(x = sqm, y = price)) +
geom_point()
ggplot(economics, aes(x = "pce", y = "uempmed")) +
geom_polygon()
ggplot(house.df, aes(x = sqm, y = price)) +
geom_point()
head(house.df)
head(weights.model)
ggplot(house.df, aes(x = sqm, y = price)) +
geom_point()
ggplot(economics, aes(x = "pce", y = "uempmed")) +
geom_polygon()
ggplot(economics, aes(x = pce, y = uempmed)) +
geom_polygon()
model.plot <- ggplot(data = weights.model, aes(x = Days ON,
y = BodyWeight)) +
geom_point()
source('~/.active-rstudio-document', echo=TRUE)
model.plot
source('~/.active-rstudio-document', echo=TRUE)
model.plot <- ggplot(data = weights.model, aes(x = Days_ON,
y = BodyWeight)) +
geom_point() +
ggplot(data = weights.model, aes(x = Days_ON, y = BodyWeight)) +
geom_point() +
ggtitle(Expected Weights over Cycle) +
theme_dark
model.plot <- ggplot(data = weights.model, aes(x = Days_ON,
y = BodyWeight)) +
geom_point() +
ggplot(data = weights.model, aes(x = Days_ON, y = BodyWeight)) +
geom_point() +
ggtitle(Expected Weights over Cycle) +
theme_dark()
source('~/.active-rstudio-document', echo=TRUE)
model.plot <- ggplot(data = weights.model, aes(x = Days_ON,
y = BodyWeight)) +
geom_point() +
ggplot(data = weights.model, aes(x = Days_ON, y = BodyWeight)) +
geom_point() +
ggtitle("Expected Weights over Cycle") +
theme_dark()
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
ggplot(data = weights.model, aes(x = Days_ON, y = BodyWeight)) +
geom_point()
ggplot(data = weights.model, aes(x = Days_ON, y = BodyWeight)) +
geom_point() +
ggtitle("Expected Weights over Cycle")
ggplot(data = weights.model, aes(x = Days_ON, y = BodyWeight)) +
geom_point() +
ggtitle("Expected Weights over Cycle") +
theme_dark()
ggplot(data = weights.model, aes(x = Days_ON, y = BodyWeight)) +
geom_point(col = "BLUE") +
ggtitle("Expected Weights over Cycle") +
theme_dark()
ggplot(data = weights.model, aes(x = Days_ON, y = BodyWeight)) +
geom_point(col = "BLUE") +
ggtitle("Expected Weights over Cycle") +
theme_light()
ggplot(data = weights.model, aes(x = Days_ON, y = BodyWeight)) +
geom_point(col = "pink") +
ggtitle("Expected Weights over Cycle") +
theme_light()
ggplot(data = weights.model, aes(x = Days_ON, y = BodyWeight)) +
geom_point(col = "pink", size = 4) +
ggtitle("Expected Weights over Cycle") +
theme_light()
ggplot(data = weights.model, aes(x = Days_ON, y = BodyWeight)) +
geom_point(col = "pink", size = 2) +
ggtitle("Expected Weights over Cycle") +
theme_light()
ggplot(data = weights.model, aes(x = Days_ON, y = BodyWeight)) +
geom_scatter(col = "pink", size = 2) +
ggtitle("Expected Weights over Cycle") +
theme_light()
ggplot(data = weights.model, aes(x = Days_ON, y = BodyWeight)) +
geom_jitter(col = "pink", size = 2) +
ggtitle("Expected Weights over Cycle") +
theme_light()
ggplot(data = weights.model, aes(x = Days_ON, y = BodyWeight)) +
geom_jitter(col = "pink", size = 2, height = 4, width = 4) +
ggtitle("Expected Weights over Cycle") +
theme_light()
ggplot(data = weights.model, aes(x = Days_ON, y = BodyWeight)) +
geom_jitter(col = "pink", size = 2, height = 4, width = 3) +
ggtitle("Expected Weights over Cycle") +
theme_light()
ggplot(data = weights.model, aes(x = Days_ON, y = BodyWeight)) +
geom_jitter(col = "pink", size = 2, height = 1, width = 1) +
ggtitle("Expected Weights over Cycle") +
theme_light()
ggplot(data = weights.model, aes(x = Days_ON, y = BodyWeight)) +
geom_jitter(col = "pink", size = 2, height = 1, width = 1) +
ggtitle("Expected Weights over Cycle") +
xlab("Days on Cycle") +
ylab("Scale Weight")
xlab("Days on Cycle (Kg)) +
geom_point(col = "pink", size = 2, height = 1, width = 1) +
ggplot(data = weights.model, aes(x = Days_ON, y = BodyWeight)) +
geom_point(col = "pink", size = 2, height = 1, width = 1) +
ggtitle("Expected Weights over Cycle") +
xlab("Days on Cycle (Kg)") +
ylab("Scale Weight") +
theme_light()
ggplot(data = weights.model, aes(x = Days_ON, y = BodyWeight)) +
geom_point(col = "pink", size = 2, height = 1, width = 1) +
ggtitle("Expected Weights over Cycle") +
xlab("Days on Cycle (Kg)") +
ylab("Scale Weight") +
theme_light()
ggplot(data = weights.model, aes(x = Days_ON, y = BodyWeight)) +
geom_jitter(col = "pink", size = 2, height = 1, width = 1) +
ggtitle("Expected Weights over Cycle") +
xlab("Days on Cycle (Kg)") +
ylab("Scale Weight") +
theme_light()
ggplot(data = weights.model, aes(x = Days_ON, y = BodyWeight)) +
geom_jitter(col = "pink", size = 2, height = 1, width = 1) +
ggtitle("Expected Weights over Cycle") +
xlab("Days on Cycle (Kg)") +
ylab("Scale Weight") +
theme_light() +
geom_curve()
ggplot(data = weights.model, aes(x = Days_ON, y = BodyWeight)) +
geom_jitter(col = "pink", size = 2, height = 1, width = 1) +
ggtitle("Expected Weights over Cycle") +
xlab("Days on Cycle (Kg)") +
ylab("Scale Weight") +
theme_light() +
geom_line()
ggplot(data = weights.model, aes(x = Days_ON, y = BodyWeight)) +
geom_jitter(col = "pink", size = 2, height = 1, width = 1) +
ggtitle("Expected Weights over Cycle") +
xlab("Days on Cycle (Kg)") +
ylab("Scale Weight") +
theme_light() +
geom_line(col = "purple", lwd = 3)
ggplot(data = weights.model, aes(x = Days_ON, y = BodyWeight)) +
geom_jitter(col = "pink", size = 2, height = 1, width = 1) +
ggtitle("Expected Weights over Cycle") +
xlab("Days on Cycle (Kg)") +
ylab("Scale Weight") +
theme_light() +
geom_line(col = "purple", lwd = 2)
ggplot(data = weights.model, aes(x = Days_ON, y = BodyWeight)) +
geom_jitter(col = "pink", size = 2, height = 1, width = 1) +
ggtitle("Expected Weights over Cycle") +
xlab("Days on Cycle (Kg)") +
ylab("Scale Weight") +
theme_light() +
geom_line(col = "purple", lwd = 2, alpha = 0.7)
day.vec     <- c()
weights.vec <- c()
for (days in 1:(12)) {
day.vec     <- c(day.vec, days)
weights.vec <- c(weights.vec, ((85-73)/12 * days + 73))
}
weights.model <- data.frame("Days_ON" = day.vec,
"BodyWeight" = weights.vec)
model.plot
ggplot(data = weights.model, aes(x = Days_ON, y = BodyWeight)) +
geom_jitter(col = "pink", size = 2, height = 1, width = 1) +
ggtitle("Expected Weights over Cycle") +
xlab("Days on Cycle (Kg)") +
ylab("Scale Weight") +
theme_light()
ggplot(data = weights.model, aes(x = Days_ON, y = BodyWeight)) +
geom_jitter(col = "pink", size = 4, height = 3, width = 3) +
ggtitle("Expected Weights over Cycle") +
xlab("Days on Cycle (Kg)") +
ylab("Scale Weight") +
theme_light()
geom_line(col = "purple", lwd = 2, alpha = 0.7)
geom_line(col = "purple", lwd = 2, alpha = 0.7)
ggplot(data = weights.model, aes(x = Days_ON, y = BodyWeight)) +
geom_jitter(col = "pink", size = 4, height = 3, width = 3) +
ggtitle("Expected Weights over Cycle") +
xlab("Days on Cycle (Kg)") +
ylab("Scale Weight") +
theme_light() +
geom_line(col = "purple", lwd = 2, alpha = 0.7)
ggplot(data = weights.model, aes(x = Days_ON, y = BodyWeight)) +
geom_jitter(col = "pink", size = 4, height = 0, width = 0) +
ggtitle("Expected Weights over Cycle") +
xlab("Days on Cycle (Kg)") +
ylab("Scale Weight") +
theme_light() +
geom_line(col = "purple", lwd = 2, alpha = 0.7)
ggplot(data = weights.model, aes(x = Days_ON, y = BodyWeight)) +
geom_jitter(col = "pink", size = 4, height = 5, width = 5) +
ggtitle("Expected Weights over Cycle") +
xlab("Days on Cycle (Kg)") +
ylab("Scale Weight") +
theme_light() +
geom_line(col = "purple", lwd = 2, alpha = 0.7)
ggplot(data = weights.model, aes(x = Days_ON, y = BodyWeight)) +
geom_jitter(col = "pink", size = 4, height = 5, width = 5) +
ggtitle("Expected Weights over Cycle") +
xlab("Days on Cycle (Kg)") +
ylab("Scale Weight") +
theme_light()
ggplot(data = weights.model, aes(x = Days_ON, y = BodyWeight)) +
geom_jitter(col = "pink", size = 4, height = 5, width = 5) +
ggtitle("Expected Weights over Cycle") +
xlab("Days on Cycle (Kg)") +
ylab("Scale Weight") +
theme_light()
ggplot(data = weights.model, aes(x = Days_ON, y = BodyWeight)) +
geom_jitter(col = "pink", size = 4, height = 5, width = 5) +
ggtitle("Expected Weights over Cycle") +
xlab("Days on Cycle (Kg)") +
ylab("Scale Weight") +
theme_light()
ggplot(data = weights.model, aes(x = Days_ON, y = BodyWeight)) +
geom_jitter(col = "pink", size = 4, height = 5, width = 5) +
ggtitle("Expected Weights over Cycle") +
xlab("Days on Cycle (Kg)") +
ylab("Scale Weight") +
theme_light()
ggplot(data = weights.model, aes(x = Days_ON, y = BodyWeight)) +
geom_jitter(col = "pink", size = 7, height = 5, width = 5) +
ggtitle("Expected Weights over Cycle") +
xlab("Days on Cycle (Kg)") +
ylab("Scale Weight") +
theme_light()
ggplot(data = weights.model, aes(x = Days_ON, y = BodyWeight)) +
geom_jitter(col = "pink", size = 7, height = 5, width = 5) +
ggtitle("Expected Weights over Cycle") +
xlab("Days on Cycle (Kg)") +
ylab("Scale Weight") +
theme_light()
ggplot(data = weights.model, aes(x = Days_ON, y = BodyWeight)) +
geom_jitter(col = "pink", size = 7, height = 5, width = 5) +
ggtitle("Expected Weights over Cycle") +
xlab("Days on Cycle (Kg)") +
ylab("Scale Weight") +
theme_light()
ggplot(data = weights.model, aes(x = Days_ON, y = BodyWeight)) +
geom_jitter(col = "pink", size = 7, height = 5, width = 5) +
ggtitle("Expected Weights over Cycle") +
xlab("Days on Cycle (Kg)") +
ylab("Scale Weight") +
theme_light() +
geom_abline(slope = 5/2.5, intercept = 73)
ggplot(data = weights.model, aes(x = Days_ON, y = BodyWeight)) +
geom_jitter(col = "pink", size = 7, height = 5, width = 5) +
ggtitle("Expected Weights over Cycle") +
xlab("Days on Cycle (Kg)") +
ylab("Scale Weight") +
theme_light() +
geom_abline(slope = 5, intercept = 73)
ggplot(data = weights.model, aes(x = Days_ON, y = BodyWeight)) +
geom_jitter(col = "pink", size = 7, height = 5, width = 5) +
ggtitle("Expected Weights over Cycle") +
xlab("Days on Cycle (Kg)") +
ylab("Scale Weight") +
theme_light() +
geom_abline(slope = 1, intercept = 73)
ggplot(data = weights.model, aes(x = Days_ON, y = BodyWeight)) +
geom_jitter(col = "pink", size = 7, height = 5, width = 5) +
ggtitle("Expected Weights over Cycle") +
xlab("Days on Cycle (Kg)") +
ylab("Scale Weight") +
theme_light() +
geom_abline(slope = 1, intercept = 73, col = "green", alpha = 0.5, lwd =6)
ggplot(data = weights.model, aes(x = Days_ON, y = BodyWeight)) +
geom_jitter(col = "pink", size = 7, height = 5, width = 5) +
ggtitle("Expected Weights over Cycle") +
xlab("Days on Cycle (Kg)") +
ylab("Scale Weight") +
theme_light() +
geom_abline(slope = 1, intercept = 73, col = "orange", alpha = 0.5, lwd =4)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
ggplot(data = weights.model2, aes(x = Days_ON, y = BodyWeight)) +
geom_jitter(col = "pink", size = 7, height = 5, width = 5) +
ggtitle("Expected Weights over Cycle") +
xlab("Days on Cycle (Kg)") +
ylab("Scale Weight") +
theme_light() +
geom_abline(slope = 1/8, intercept = 73, col = "orange",
alpha = 0.5, lwd =4) +
#geom_line(col = "purple", lwd = 2, alpha = 0.7)
geom_point(data = weights.model,
aes(x = Days_ON, y = BodyWeight))
ggplot(data = weights.model2, aes(x = Days_ON, y = BodyWeight)) +
geom_jitter(col = "pink", size = 7, height = 5, width = 5) +
ggtitle("Expected Weights over Cycle") +
xlab("Days on Cycle (Kg)") +
ylab("Scale Weight") +
theme_light() +
geom_abline(slope = 1/8, intercept = 72, col = "orange",
alpha = 0.5, lwd =4) +
#geom_line(col = "purple", lwd = 2, alpha = 0.7)
geom_point(data = weights.model,
aes(x = Days_ON, y = BodyWeight))
ggplot(data = weights.model2, aes(x = Days_ON, y = BodyWeight)) +
geom_jitter(col = "pink", size = 7, height = 5, width = 5) +
ggtitle("Expected Weights over Cycle") +
xlab("Days on Cycle (Kg)") +
ylab("Scale Weight") +
theme_light() +
geom_abline(slope = 1/8, intercept = 74, col = "orange",
alpha = 0.5, lwd =4) +
#geom_line(col = "purple", lwd = 2, alpha = 0.7)
geom_point(data = weights.model,
aes(x = Days_ON, y = BodyWeight))
ggplot(data = weights.model2, aes(x = Days_ON, y = BodyWeight)) +
geom_jitter(col = "pink", size = 7, height = 5, width = 5) +
ggtitle("Expected Weights over Cycle") +
xlab("Days on Cycle (Kg)") +
ylab("Scale Weight") +
theme_light() +
geom_abline(slope = 1/8, intercept = 74, col = "orange",
alpha = 0.5, lwd =4) +
#geom_line(col = "purple", lwd = 2, alpha = 0.7)
geom_point(data = weights.model,
aes(x = Days_ON, y = BodyWeight),
col = blue)
ggplot(data = weights.model2, aes(x = Days_ON, y = BodyWeight)) +
geom_jitter(col = "pink", size = 7, height = 5, width = 5) +
ggtitle("Expected Weights over Cycle") +
xlab("Days on Cycle (Kg)") +
ylab("Scale Weight") +
theme_light() +
geom_abline(slope = 1/8, intercept = 74, col = "orange",
alpha = 0.5, lwd =4) +
#geom_line(col = "purple", lwd = 2, alpha = 0.7)
geom_point(data = weights.model,
aes(x = Days_ON, y = BodyWeight),
col = "blue")
ggplot(data = weights.model2, aes(x = Days_ON, y = BodyWeight)) +
geom_jitter(col = "pink", size = 7, height = 5, width = 5) +
ggtitle("Expected Weights over Cycle") +
xlab("Days on Cycle (Kg)") +
ylab("Scale Weight") +
theme_light() +
geom_abline(slope = 1/8, intercept = 74, col = "orange",
alpha = 0.5, lwd =4) +
#geom_line(col = "purple", lwd = 2, alpha = 0.7)
geom_curve(data = weights.model,
aes(x = Days_ON, y = BodyWeight),
col = "blue")
point
ggplot(data = weights.model2, aes(x = Days_ON, y = BodyWeight)) +
geom_jitter(col = "pink", size = 7, height = 5, width = 5) +
ggtitle("Expected Weights over Cycle") +
xlab("Days on Cycle (Kg)") +
ylab("Scale Weight") +
theme_light() +
geom_abline(slope = 1/8, intercept = 74, col = "orange",
alpha = 0.5, lwd =4) +
#geom_line(col = "purple", lwd = 2, alpha = 0.7)
geom_point(data = weights.model,
aes(x = Days_ON, y = BodyWeight),
col = "blue")
